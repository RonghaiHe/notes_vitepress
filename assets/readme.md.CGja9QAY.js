import{_ as o,c as a,o as d,ah as t}from"./chunks/framework.Di0PklcO.js";const m=JSON.parse('{"title":"VitePress-demo","description":"","frontmatter":{},"headers":[],"relativePath":"readme.md","filePath":"readme.md","lastUpdated":1760361253000}'),r={name:"readme.md"};function i(c,e,s,l,n,h){return d(),a("div",null,e[0]||(e[0]=[t('<h1 id="vitepress-demo" tabindex="-1">VitePress-demo <a class="header-anchor" href="#vitepress-demo" aria-label="Permalink to “VitePress-demo”">​</a></h1><blockquote><p><a href="https://vitepress.dev/zh/guide/getting-started" target="_blank" rel="noreferrer">官方文档</a></p></blockquote><blockquote><p><a href="https://vitepress.dev/zh/guide/markdown" target="_blank" rel="noreferrer">VitePress中的markdown扩展功能</a></p></blockquote><h1 id="配合-github-pages" tabindex="-1">配合 <code>Github Pages</code> <a class="header-anchor" href="#配合-github-pages" aria-label="Permalink to “配合 Github Pages”">​</a></h1><ul><li>首先进行任意一次提交，触发 <code>Github Actions</code>，从而创建 <code>gh-pages</code> 分支；</li><li>或者，自行创建 <code>gh-pages</code> 分支（必须是这个分支名称）</li></ul><ol><li>在仓库上方工具栏点击 <code>Settings</code>；</li><li>点击左侧的 <code>Pages</code>；</li><li>在 <code>Build and deployment</code> 中的 <code>branch</code> 中选择 <code>gh-pages</code>，默认为 <code>/(root)</code>，点击 <code>Save</code>。</li><li>可以点击仓库上方工具栏的 <code>Actions</code> 查看 <code>pages build and deployment</code> 的过程。</li></ol><h1 id="diy" tabindex="-1">DIY <a class="header-anchor" href="#diy" aria-label="Permalink to “DIY”">​</a></h1><p>全程<strong>不需要</strong>在本地部署除仓库文件外的任何工具</p><ul><li>修改 <code>.vitepress/config.mjs</code> 中的 <code>base</code> 为自己的仓库名</li><li>只需要修改markdown文件，<code>push</code> 到 <code>Github</code> 仓库即可自行编译，再通过 <code>Github Pages</code> 呈现出笔记显示在网页的效果</li></ul>',9)]))}const g=o(r,[["render",i]]);export{m as __pageData,g as default};
